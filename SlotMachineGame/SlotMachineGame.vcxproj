<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Distribution|x64">
      <Configuration>Distribution</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{D6DC2967-4268-972B-4B79-1A20B783F32B}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>SlotMachineGame</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\Out\Bin\Debug-windows-x86_64\SlotMachineGame\</OutDir>
    <IntDir>..\Out\Obj\Debug-windows-x86_64\SlotMachineGame\</IntDir>
    <TargetName>SlotMachine</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\Out\Bin\Release-windows-x86_64\SlotMachineGame\</OutDir>
    <IntDir>..\Out\Obj\Release-windows-x86_64\SlotMachineGame\</IntDir>
    <TargetName>SlotMachine</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame\</OutDir>
    <IntDir>..\Out\Obj\Distribution-windows-x86_64\SlotMachineGame\</IntDir>
    <TargetName>SlotMachine</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>INITGUID;OCTAVIAN_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;3rdparty\Glad\include;3rdparty\glm;3rdparty\GLFW\include;3rdparty\stb;3rdparty\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opengl32.lib;3rdparty\SFML\lib\sfml-audio-d.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/NODEFAULTLIB:"LIBCMT" %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame\assets &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-d-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-d-2.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-d-2.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-d-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-d-2.dll ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-d-2.dll ..\Out\Bin\Debug-windows-x86_64\SlotMachineGame &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>INITGUID;OCTAVIAN_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;3rdparty\Glad\include;3rdparty\glm;3rdparty\GLFW\include;3rdparty\stb;3rdparty\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;3rdparty\SFML\lib\sfml-audio.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/NODEFAULTLIB:"LIBCMT" %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\Out\Bin\Release-windows-x86_64\SlotMachineGame\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\Out\Bin\Release-windows-x86_64\SlotMachineGame\assets &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Release-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Release-windows-x86_64\SlotMachineGame &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll ..\Out\Bin\Release-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll ..\Out\Bin\Release-windows-x86_64\SlotMachineGame &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>INITGUID;OCTAVIAN_DIST;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;3rdparty\Glad\include;3rdparty\glm;3rdparty\GLFW\include;3rdparty\stb;3rdparty\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;3rdparty\SFML\lib\sfml-audio.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/NODEFAULTLIB:"LIBCMT" %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame\assets &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\openal32.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\openal32.dll ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll \ &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll \ &gt; nul)
IF EXIST 3rdparty\SFML\bin\sfml-audio-2.dll\ (xcopy /Q /E /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame &gt; nul) ELSE (xcopy /Q /Y /I 3rdparty\SFML\bin\sfml-audio-2.dll ..\Out\Bin\Distribution-windows-x86_64\SlotMachineGame &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\button.hpp" />
    <ClInclude Include="src\engine\assert.h" />
    <ClInclude Include="src\engine\camera.h" />
    <ClInclude Include="src\engine\engine.h" />
    <ClInclude Include="src\engine\gfx\api\gl\gl_buffer.hpp" />
    <ClInclude Include="src\engine\gfx\api\gl\gl_context.hpp" />
    <ClInclude Include="src\engine\gfx\api\gl\gl_shader.hpp" />
    <ClInclude Include="src\engine\gfx\api\gl\gl_texture.hpp" />
    <ClInclude Include="src\engine\gfx\api\gl\gl_vertex_array.hpp" />
    <ClInclude Include="src\engine\gfx\api\opengl.h" />
    <ClInclude Include="src\engine\gfx\buffer.h" />
    <ClInclude Include="src\engine\gfx\context.h" />
    <ClInclude Include="src\engine\gfx\gfx.h" />
    <ClInclude Include="src\engine\gfx\object.h" />
    <ClInclude Include="src\engine\gfx\shader.h" />
    <ClInclude Include="src\engine\gfx\texture.h" />
    <ClInclude Include="src\engine\gfx\vertex.h" />
    <ClInclude Include="src\engine\gfx\vertex_array.h" />
    <ClInclude Include="src\engine\graphics.h" />
    <ClInclude Include="src\engine\gui\button3d.h" />
    <ClInclude Include="src\engine\physics.h" />
    <ClInclude Include="src\engine\physx\object.h" />
    <ClInclude Include="src\engine\physx\physx.h" />
    <ClInclude Include="src\engine\primitive\circle.h" />
    <ClInclude Include="src\engine\primitive\quad.h" />
    <ClInclude Include="src\engine\primitive\ring.h" />
    <ClInclude Include="src\engine\renderer2d.h" />
    <ClInclude Include="src\engine\sound.h" />
    <ClInclude Include="src\engine\window.h" />
    <ClInclude Include="src\event.hpp" />
    <ClInclude Include="src\game.h" />
    <ClInclude Include="src\game\card.hpp" />
    <ClInclude Include="src\game\reel.hpp" />
    <ClInclude Include="src\game\slot_machine.hpp" />
    <ClInclude Include="src\slot_machine.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\engine\renderer2d.cpp" />
    <ClCompile Include="src\engine\window.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\precompiled.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="3rdparty\GLFW\GLFW.vcxproj">
      <Project>{154B857C-0182-860D-AA6E-6C109684020F}</Project>
    </ProjectReference>
    <ProjectReference Include="3rdparty\Glad\Glad.vcxproj">
      <Project>{BDD6857C-A90D-870D-52FA-6C103E10030F}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>